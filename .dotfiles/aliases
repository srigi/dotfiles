# shortcuts docker
alias de="docker exec -ti"
alias di="docker images | sort"
alias dps="docker ps -a"
alias dr="docker run --rm -ti"
alias drm="docker rm"
alias drmi="docker rmi"
alias ds="docker stop"
alias dv="docker volume"
alias dvls="docker volume ls"
alias dvrm="docker volume rm"

# shortcuts docker-compose
alias dc="docker-compose"
alias dcb="docker-compose build"
alias dcd="docker-compose down"
alias dce="docker-compose exec"
alias dcps="docker-compose ps"
alias dcr="docker-compose run --rm"
alias dcu="docker-compose up"
alias dcub="docker-compose up --build"

# shortcuts kubectl
alias k=kubectl
alias ka="k apply -f"
alias kak="k apply -k"
alias kc="k create -f"
alias kdesc="k describe"
alias ke="k exec -ti"
alias kgg="k get --all-namespaces"
alias kl="k logs -f"
alias kpd='k patch deployment -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"'
# kubectl delete ...
alias kd="k delete"
alias kdd="k delete deploy"
alias kdi="k delete ingress"
alias kdj="k delete job"
alias kdns="k delete ns"
alias kdpv="k delete persistentvolume"
alias kdpvc="k delete persistentvolumeclaim"
alias kds="k delete svc"
#alias kdja="for j in $(k get jobs -o custom-columns=:.metadata.name -n hace); do k delete job -n hace $j; done"
# kubectl get ...
alias kg="k get --show-labels"
alias kga="kg all"
alias kgaw="watch -n1 -t kubectl get all --show-labels"
alias kgaa="k get all -o wide --show-labels"
alias kgaaw="watch -n1 -t kubectl get all -o wide --show-labels"
alias kgd="kg deploy -o wide"
alias kgdw="kg deploy -o wide --watch"
alias kgi="kg ingresses --all-namespaces -o wide"
alias kgiw="kg ingresses --all-namespaces -o wide --watch"
alias kgj="kg jobs --all-namespaces -o wide"
alias kgn="kg nodes -o wide"
alias kgnw="kg nodes -o wide --watch"
alias kgns="kg namespaces"
alias kgnsw="kg namespaces --watch"
alias kgp="kg pods -o wide"
alias kgpw="kg pods -o wide --watch"
alias kgpv="kg persistentvolumes"
alias kgpvw="kg persistentvolumes --watch"
alias kgpvc="kg persistentvolumeclaims --all-namespaces"
alias kgpvcw="kg persistentvolumeclaims --all-namespaces --watch"
alias kgs="kg svc -o wide"
alias kgsw="kg svc -o wide --watch"

# utility aliases
alias dl="cd ~/Downloads"
alias s="subl ."
alias cleanup="find $HOME -type f -name '*.DS_Store' -ls -delete"  	# recursively delete `.DS_Store` files from $HOME
alias composer="php -n -dmemory_limit=2560M ~/bin/composer.phar"
alias ls='gls -lAFh --color --group-directories-first'
alias npmls="npm list --depth=0 2>/dev/null"
alias npmo="npm outdated --depth 0"
alias sudo='sudo '													# enable aliases to be sudoâ€™ed
alias tf=terraform
#alias sudo='A=`alias` sudo env '									# save current ENV when sudo
alias watch='watch '

# networking aliases
alias flush="sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
alias httpdump="sudo tcpdump -i lo0 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""
alias lsports='lsof -Pn -i4 -i6 | grep LISTEN'
alias lsportss='netstat -an | grep LISTEN'
alias sniff="sudo ngrep -d 'lo0' -t '^(DELETE|GET|OPTIONS|POST|PUT) ' 'tcp and port 80'"

# intuitive map function
# for example, to list all directories that contain a certain file:
#   find . -name .gitattributes | map dirname
alias map="xargs -n1"

function cdf() {
	target=`osascript -e 'tell application "Path Finder" to if (count of Finder windows) > 0 then get POSIX path of the target of the front finder window'`
	if [ "$target" != "" ]; then
		cd "$target"; pwd
	else
		echo 'No Path Finder window found' >&2
	fi
}

function randstr() {
	cat /dev/urandom | gtr -dc 'a-zA-Z0-9!@#$%^&*()-_=+[{}];:\|`~,<>./?' | fold -w ${1:-16} | head -n 1
}

function ssht () {
	ssh -t $@ "tmux attach || tmux new";
}

function t() {
	ignore='"node_modules|.git"'
	cmd="tree -a -C --dirsfirst -I $ignore"

	if [[ $1 -eq 0 ]]; then
		cmd="$cmd -L 1"
	fi

	if [[ $1 =~ '^[0-9]+$' ]]; then
		cmd="$cmd -L"
	fi

	eval $cmd $@
}

alias t2="t 2"
alias t3="t 3"
alias t4="t 4"
alias t5="t 5"
